class GfG {
    
    
    Node Lca(Node root,int a,int b){
        if(root == null || root.data == a || root.data == b){
            return root;
        }
        
        Node left = Lca(root.left,a,b);
        Node right = Lca(root.right,a,b);
        
        if(left != null && right != null){
            return root;
        }
        
        return left == null?right:left;
    }
    
    //
     int dist(Node root, int tar, int level){
        if(root==null){
            return Integer.MAX_VALUE;
        }
        if(root.data==tar){
            return level;
        }
        return Math.min(dist(root.left,tar,level+1),dist(root.right,tar,level+1));
    }
    
    int findDist(Node root, int a, int b) {
       
       Node lca = Lca(root,a,b);
       return dist(lca,a,0)+dist(lca,b,0);
       
    }
}
