class GFG
{
    //Function to store the zig zag order traversal of tree in a list.
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	  
	    Queue<Node> q = new LinkedList<Node>();
        ArrayList<Integer> arr = new  ArrayList<Integer>();
        int flag = 0; // if Flag 0 then Left to right and if flag 1 then right to left
        
        q.add(root);
        
        while (q.size() != 0 ){
            int s = q.size();
            ArrayList<Integer> temp = new ArrayList<Integer>();
            for (int i = 0; i < s; i++){
                Node n = q.peek();
                q.remove();
                temp.add(n.data);
                
                if (n.left != null) 
                    q.add(n.left);
                if (n.right != null)
                    q.add(n.right);
            }
            if (flag == 0){
               for (int i =0; i< temp.size() ; i++ )
                arr.add(temp.get(i));
               flag = 1;
            }
            else if (flag == 1){
                for (int i = temp.size()-1; i>=0; i--){
                    arr.add(temp.get(i));
                }
                flag =0 ;
            }
        }
        return arr;
	}
}
