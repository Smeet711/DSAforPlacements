class Solution 
{ 
	public static int minOperations(int a[], int n) 
	{ 
	    
	    int count = 0; 

		PriorityQueue<Integer> pq = new PriorityQueue<>(); 
		
		if(a.length == 0){
		    return 0;
		}
		
		for (int i = 0; i < n; i++) 
		{ 
			if (!pq.isEmpty() && pq.peek() < a[i]) 
			{ 
				count += a[i] - pq.remove(); 
				pq.add(a[i]); 
			} 
			pq.add(a[i]); 
		} 
		return count; 
	} 
} 

Input:
N = 4 
array = {3, 1, 2, 1}
Output: 1
Explanation: 
Decrement array[2] by 1. 
New array becomes {3,1,1,1} which is non-increasing. 
Therefore, only 1 step is required. 
